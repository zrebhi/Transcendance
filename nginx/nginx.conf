# First server block for handling HTTPS connections
server {
    # Listen on port 443 (default port for HTTPS) and enable SSL
    listen 443 ssl;

    # Define server names (domain names)
    # Here, it listens to localhost and an IP address
    server_name localhost 192.168.1.78;

    # SSL certificate and key files location
    ssl_certificate /etc/nginx/certs/cert.pem;
    ssl_certificate_key /etc/nginx/certs/key.pem;

    # Define allowed SSL protocols
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;

    # Define SSL ciphers to determine the encryption methods
    # HIGH: This represents a group of high-strength ciphers.
    # !aNULL: This excludes anonymous ciphers, which do not authenticate the server and are thus insecure.
    # !MD5: This specifically excludes any ciphers that use MD5, due to its known vulnerabilities.
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Location block for the root URL
    location / {
        # Proxy pass to forward requests to the Django application server
        proxy_pass http://website:8000;

        proxy_http_version 1.1;

        # Set headers for WebSocket support
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';

        # Forward the host header
        proxy_set_header Host $host;

        # Bypass the proxy cache if the HTTP upgrade header is present
        proxy_cache_bypass $http_upgrade;
    }
}

# Second server block for redirecting HTTP to HTTPS
server {
    # Listen on port 80 (default port for HTTP) and set this as the default server
    # for requests coming to port 80
    listen 80 default_server;

    # Default server name (catch-all)
    server_name _;

    # Redirect all HTTP requests to HTTPS
    # $host and $request_uri are variables for the host and URI part of the request
    return 301 https://$host$request_uri;
}
